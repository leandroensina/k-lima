/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.15
 * Generated at: 2017-07-17 16:10:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Graficos_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <title>JSP Page</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("\r\n");
      out.write("  <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("  <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n");
      out.write("  <script src=\"https://code.highcharts.com/modules/drilldown.js\"></script>\r\n");
      out.write("  \r\n");
      out.write(" <div id=\"colunasLaterais\" style=\"min-width: 310px; max-width: 800px; height: 400px; margin: 0 auto\"></div>  \r\n");
      out.write("<br><br><br>\r\n");
      out.write("\r\n");
      out.write("<div id=\"AlunosDesistentesPorCurso\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\r\n");
      out.write("\r\n");
      out.write("<br><br><br>     \r\n");
      out.write("  <div id=\"AlunosPorAnoDoCursoDe\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\r\n");
      out.write("<br><br><br>\r\n");
      out.write("        \r\n");
      out.write("  <div id=\"pizza\" style=\"min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto\"></div>\r\n");
      out.write("<br><br><br> \r\n");
      out.write("  \r\n");
      out.write("<div id=\"container\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>  \r\n");
      out.write("        \r\n");
      out.write("     <script>\r\n");
      out.write("        \r\n");
      out.write("        // Create the chart\r\n");
      out.write("\r\n");
      out.write("Highcharts.chart('colunasLaterais', {\r\n");
      out.write("        chart: {\r\n");
      out.write("            type: 'column'\r\n");
      out.write("        },\r\n");
      out.write("        title: {\r\n");
      out.write("            text: 'Alunos Desistentes por Curso'\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        xAxis: {\r\n");
      out.write("            categories: ['Ciência da Computação','Engenharia Elétrica','Engenharia Mecânica','Matemática'],\r\n");
      out.write("            crosshair: true\r\n");
      out.write("        },\r\n");
      out.write("        yAxis: {\r\n");
      out.write("            min: 0,\r\n");
      out.write("            title: {\r\n");
      out.write("                text: 'Quantidade de alunos'\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n");
      out.write("            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n");
      out.write("                '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n");
      out.write("            footerFormat: '</table>',\r\n");
      out.write("            shared: true,\r\n");
      out.write("            useHTML: true\r\n");
      out.write("        },\r\n");
      out.write("        plotOptions: {\r\n");
      out.write("            column: {\r\n");
      out.write("                pointPadding: 0.2,\r\n");
      out.write("                borderWidth: 0\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        series: [{\r\n");
      out.write("            name: 'Desistentes',\r\n");
      out.write("            data: [495, 228, 143, 440]\r\n");
      out.write("\r\n");
      out.write("        }]\r\n");
      out.write("    }); // retangular\r\n");
      out.write("        \r\n");
      out.write("Highcharts.chart('AlunosDesistentesPorCurso', {\r\n");
      out.write("        chart: {\r\n");
      out.write("            type: 'bar'\r\n");
      out.write("        },\r\n");
      out.write("        title: {\r\n");
      out.write("            text: 'Alunos Cursando: Ciencia da Computação'+' '\r\n");
      out.write("        },\r\n");
      out.write("        xAxis: {\r\n");
      out.write("            categories: ['1 ano', '2 ano', '3 ano', '4 ano'],\r\n");
      out.write("            title: {\r\n");
      out.write("                text: null\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        yAxis: {\r\n");
      out.write("            min: 0,\r\n");
      out.write("            title: {\r\n");
      out.write("                text: 'Alunos',\r\n");
      out.write("                align: 'high'\r\n");
      out.write("            },\r\n");
      out.write("            labels: {\r\n");
      out.write("                overflow: 'justify'\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("        },\r\n");
      out.write("        plotOptions: {\r\n");
      out.write("            bar: {\r\n");
      out.write("                dataLabels: {\r\n");
      out.write("                    enabled: true\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        credits: {\r\n");
      out.write("            enabled: false\r\n");
      out.write("        },\r\n");
      out.write("        series: [{\r\n");
      out.write("            name: 'Quantidade de alunos',\r\n");
      out.write("            data: [55 , 32, 10, 21]\r\n");
      out.write("        }]\r\n");
      out.write("    });\r\n");
      out.write("        \r\n");
      out.write("Highcharts.chart('AlunosPorAnoDoCursoDe', {\r\n");
      out.write("        chart: {\r\n");
      out.write("            type: 'column'\r\n");
      out.write("        },\r\n");
      out.write("        title: {\r\n");
      out.write("            text: 'Alunos por ano do curso de '+'CC'\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        xAxis: {\r\n");
      out.write("            categories: [ '1 ano', '2 ano', '3 ano','4 ano'],\r\n");
      out.write("            crosshair: true\r\n");
      out.write("        },\r\n");
      out.write("        yAxis: {\r\n");
      out.write("            min: 0,\r\n");
      out.write("            title: {\r\n");
      out.write("                text: 'Quantidade de alunos'\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n");
      out.write("            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n");
      out.write("                '<td style=\"padding:0\"><b>{point.y}</b></td></tr>',\r\n");
      out.write("            footerFormat: '</table>',\r\n");
      out.write("            shared: true,\r\n");
      out.write("            useHTML: true\r\n");
      out.write("        },\r\n");
      out.write("        plotOptions: {\r\n");
      out.write("            column: {\r\n");
      out.write("                pointPadding: 0.2,\r\n");
      out.write("                borderWidth: 0\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        series: [{\r\n");
      out.write("            name: 'Cancelados',\r\n");
      out.write("            data: [85, 31, 8, 7]\r\n");
      out.write("\r\n");
      out.write("        }, {\r\n");
      out.write("            name: 'Cancelados por Abandono',\r\n");
      out.write("            data: [181, 24, 50, 24]\r\n");
      out.write("        }]\r\n");
      out.write("    }); // retangular\r\n");
      out.write("        \r\n");
      out.write("Highcharts.chart('pizza', {\r\n");
      out.write("        chart: {\r\n");
      out.write("            plotBackgroundColor: null,\r\n");
      out.write("            plotBorderWidth: null,\r\n");
      out.write("            plotShadow: false,\r\n");
      out.write("            type: 'pie'\r\n");
      out.write("        },\r\n");
      out.write("        title: {\r\n");
      out.write("            text: 'situação do ingresso do curso de:'+'Ciência da Computação '\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n");
      out.write("        },\r\n");
      out.write("        plotOptions: {\r\n");
      out.write("            pie: {\r\n");
      out.write("                allowPointSelect: true,\r\n");
      out.write("                cursor: 'pointer',\r\n");
      out.write("                dataLabels: {\r\n");
      out.write("                    enabled: true,\r\n");
      out.write("                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n");
      out.write("                    style: {\r\n");
      out.write("                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        series: [{\r\n");
      out.write("            name: 'Alunos',\r\n");
      out.write("            colorByPoint: true,\r\n");
      out.write("            data: [\r\n");
      out.write("                   {name: 'Desistentes', y: 495},\r\n");
      out.write("                   {name: 'Formados', y: 222},\r\n");
      out.write("                   {name: 'Transferidos', y: 51},\r\n");
      out.write("                   {name: 'Cursando', y: 118}            \r\n");
      out.write("            ]\r\n");
      out.write("        }]\r\n");
      out.write("        \r\n");
      out.write("    });  // pizza\r\n");
      out.write(" \r\n");
      out.write("        \r\n");
      out.write("    </script>    \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
